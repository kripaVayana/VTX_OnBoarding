{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "createeSignAssineeList",
    "fullyQualifiedName": "Helper.createeSignAssineeList",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "eSign Selection",
    "collectionId": "eSign Selection_Helper",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async ()=>{\n\t\t try {\n\t\t\t \t\tconst aSigneeOptions = []\n\t\t\t\t\tlet finalOptions\n\t\t\t\t\tlet signeeString\n\t\t\t\t\tlet response = await getKeyPersonForeSign.run();\n\t\t\t   \tconsole.log('response', response)\n\t\t\t   \tif(!!response && response[0].authsigncount >= 1) {\n\t\t\t\t\t\t  const iOptIndex = response[0].authsigncount\n\t\t\t\t\t\t\tconsole.log('iOptIndex::',iOptIndex);\n    \t\t\t\t\tfor (let iOption=1;iOption<=iOptIndex;iOption++){\n\t\t\t\t\t\t\t\tconst signeeString = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: iOption + \" Signee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: iOption + \" Signee\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconsole.log('signeeString - ',signeeString);\n\t\t\t\t\t\t\t\taSigneeOptions.push(signeeString);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tstoreValue('aSigneeOptions',aSigneeOptions);\n\t\t\t\t\t\tconsole.log('aSigneeOptions - ',aSigneeOptions);\n\t\t\t\t\t\tconsole.log('from Store  - ',appsmith.store.aSigneeOptions);\n\t\t\t\t\t\t return appsmith.store.aSigneeOptions;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\n\t\t\t\t\t}\t\n\t\t\t  return finalOptions;\n\t\t} catch(e) {\n\t\t\treturn false;\n\t\t}\n\t}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async ()=>{\n\t\t try {\n\t\t\t \t\tconst aSigneeOptions = []\n\t\t\t\t\tlet finalOptions\n\t\t\t\t\tlet signeeString\n\t\t\t\t\tlet response = await getKeyPersonForeSign.run();\n\t\t\t   \tconsole.log('response', response)\n\t\t\t   \tif(!!response && response[0].authsigncount >= 1) {\n\t\t\t\t\t\t  const iOptIndex = response[0].authsigncount\n\t\t\t\t\t\t\tconsole.log('iOptIndex::',iOptIndex);\n    \t\t\t\t\tfor (let iOption=1;iOption<=iOptIndex;iOption++){\n\t\t\t\t\t\t\t\tconst signeeString = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: iOption + \" Signee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: iOption + \" Signee\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconsole.log('signeeString - ',signeeString);\n\t\t\t\t\t\t\t\taSigneeOptions.push(signeeString);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tstoreValue('aSigneeOptions',aSigneeOptions);\n\t\t\t\t\t\tconsole.log('aSigneeOptions - ',aSigneeOptions);\n\t\t\t\t\t\tconsole.log('from Store  - ',appsmith.store.aSigneeOptions);\n\t\t\t\t\t\t return appsmith.store.aSigneeOptions;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\n\t\t\t\t\t}\t\n\t\t\t  return finalOptions;\n\t\t} catch(e) {\n\t\t\treturn false;\n\t\t}\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "eSign Selection_Helper.createeSignAssineeList",
  "deleted": false,
  "gitSyncId": "621755a1972a414f3eae1d32_6218ffd97c115b642f1592d0"
}