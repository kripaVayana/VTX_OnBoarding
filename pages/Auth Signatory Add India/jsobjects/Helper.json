{
  "unpublishedCollection": {
    "name": "Helper",
    "pageId": "Auth Signatory Add India",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tget_data: (personOID) => {\n\t\t\n\t\tconst formFields = List1.items;\n\t\t//const personOID = 3;\n\t\treturn formFields.map((item,idx) => {\n\t\t\t\t\t\treturn `(\n\t\t\t\t\t\t  '${utils.generateOID(20)}',\n\t\t\t\t\t\t\t'${personOID}',\n\t\t\t\t\t\t\t'${personOID}',\n\t\t\t\t\t\t\t'${appsmith.store.customerOID}',\n\t\t\t\t\t\t\t'${appsmith.store.customerID}',\n\t\t\t\t\t\t\t'${'Auth Signatory Person India'}',\n\t\t\t\t\t\t\t'${item.Text7.text[idx]}',\n\t\t\t\t\t\t\t${item.Input18.text}\n\t\t\t\t\t\t\t)`;\n\t\t}).join(',')\n},\n\tdummy:() => {\n\t\tconst formFields = List1.items;\n\t\treturn formFields.map((item,idx)=>{ \n\t\t\treturn `'${item.vayCurrencyLimitOID.text[idx]}',\n\t\t\t${(item.Input20.text)},\n\t\t\t${(item.vayCurrencyLimitOID.text)}`;\n\t\t} );\n\t},\n\tformList: ()=>{\n\t\tconst formFields = List1.items; \n\t\treturn formFields;\n\t},\n\tgetAuthSignatoryPersonData: ()=>{\n\t\treturn appsmith.store.keyPersonData;\n\t},\n\tgetAuthSignatoryPersonCurrencyLimitData: ()=>{\n\t\tconsole.log('Auth SignatoryLimit Currencies fecthed :',getAuthSignPersonCurrencyLimit.data);\n\t\tif(getAuthSignPersonCurrencyLimit.data.length>0){\n\t\t\treturn getAuthSignPersonCurrencyLimit.data;\n\t\t}else{\n\t\t\tconst  selectedCurrency = appsmith.store.vayCCY;\n\t\t\tconsole.log('In Static Currencies', selectedCurrency);\n\t\t\treturn  appsmith.store.vayCCY.map((item) =>{\n\t\t\t\t return ({\n\t\t\t\t\t\t\tCUSTOMER_KEY_PERSON_CURRENCY_CODE_FORADMTXN:item,\n\t\t\t\t\t\t\tCUSTOMER_KEY_PERSON_CURRENCY_LIMIT:0\n\t\t\t\t});\n\t\t});\n\t\t}\n\t},\n\tupdateAuthSignatoryPersonCurrencyLimitQuery: async ()=>{\n\t\t\tconst updates = this.updateKeyPersonCurrencyLimitString();\n\t\t\tupdates.forEach((updatedItem) =>{\n\t\t\t\t\t\tconsole.log('updatedItem-',updatedItem);\n\t\t\t\t\t //const return_currencyresponse = updateAuthSignCurrencyLimit.run({currencyLimitOID:updatedItem.oid, currencyLimit:updatedItem.limit});\n\t\t\t\t\t const return_currencyresponse = updateAuthSignCurrencyLimit.run({currencyLimitOID:updatedItem.oid, currencyLimit:updatedItem.limit});\n\t\t\t\t   if(!!return_currencyresponse){\n\t\t\t\t\t\t console.log(\"Success\",return_currencyresponse);\n\t\t\t\t\t }else{\n\t\t\t\t\t\t console.log(\"Error\",return_currencyresponse);\n\t\t\t\t\t }\n\t});\n\t},\n\tgetCurrencies: ()=>{\n\t\treturn appsmith.store.vayCCY;\n\t},\n\tupdateAuthSignatoryPersonCurrencyLimitString:() =>{\t\t\n\t\t\tconst formFields = List1.items;\n\t\t  //console.log('Form List',formFields);\n\t\t\treturn formFields.map((item,idx) =>{ \n\t\t\t\treturn ({\n\t\t\t\t\tlimit:item.Input20.text,\n\t\t\t\t\toid : getAuthSignPersonCurrencyLimit.data[idx].OID\n\t\t\t\t});\t\t\t\n\t\t\t});\n  },\n\tvalidatePartnerPercentageold:async () =>{\n\t\t   return await getPartnerPercentageInfo.run( (response) =>{\n\t\t\t\t \tif(!!response && response.authsigncount >= 1 && response.authsignsum >= 50 ){\n\t\t\t\t\t\tconsole.log('Partner Percentage valid');\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t//showAlert('Partner% must be greater than 50...Please update Partner%');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t})\n\t},\n\tchangeAuthPersonAddress: async () => {\n    //const retain_keyPersonData = await Helper.retainKeyPersonInKey();\n    const retain_keyPersonData = Helper.initializeRetainKPObject();\n    await storeValue('keyPersonData', retain_keyPersonData);\n    console.log('Entity Auth Data - ', appsmith.store.keyPersonData);\n    if (vayIndAuthSignAddCountrySelect.selectedOptionValue == \"IN\") {\n        navigateTo('Add New Address Indian', { \"bkPage\": \"IndAsAdd\" });\n    }\n},\n\tinitializeRetainKPObject: () => {\n        const retain_keyPersonData = {}\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ENTITY_TYPE = 'Auth Signatory Person India'\n\t\t\t\t//retain_keyPersonData.CUSTOMER_KEY_PERSON_TYPE = vaykeyPersonIndType.selectedOptionValue\n        //showAlert('Key Person Tyep'+ retain_keyPersonData.CUSTOMER_KEY_PERSON_TYPE)\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_IS_AUTH_SIGN = true\n        //retain_keyPersonData.CUSTOMER_KEY_PERSON_OTHERS_INFO = Input21.text\n        //retain_keyPersonData.CUSTOMER_KEY_PERSON_PARTNER_PERC = Input18.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_FIRSTNAME = Input1.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_MIDDLENAME = Input3.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_LASTNAME = Input4.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_MOTHERNAME = Input5.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_FATHERNAME = Input6.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_DOB = moment(DatePicker1).format(\"YYYY-MM-DD\")\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_TAX_ID = Input7.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_NATIONALITY = Select3.selectedOptionValue\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_RES_TAX_PURPOSE = Select4.selectedOptionValue\n        //retain_keyPersonData.CUSTOMER_KEY_PERSON_DESIGNATION  = ''\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_PASSPORT_NO = Input19.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_PASSPORT_EXPIRE_DATE = moment(DatePicker1).format(\"YYYY-MM-DD\")\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ACCESS_AS = vayAuthSignatoryUserAccess.selectedOptionValue\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_DIN_DPIN = Input8.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_LINE1 = Input9.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_LINE2 = Input10.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_CITY = Input11.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_DISTRICT = Input12.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_STATE = Input13.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_COUNTRY = vayIndAuthSignAddCountrySelect.selectedOptionValue\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_ZIP = Input15.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_MOBILE = Input16.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_EMAIL = Input17.text\n\t\t    appsmith.store.vayCCY.map((item) => {\n            return ({\n                CUSTOMER_KEY_PERSON_CURRENCY_CODE_FORADMTXN: item,\n                CUSTOMER_KEY_PERSON_CURRENCY_LIMIT: Input18.text\n            });\n        });\n        return retain_keyPersonData\n    },\n\tgetStore:() =>{\n\t\treturn appsmith.store;\n },\n\ttestValidatePartner: async () =>{\n\t  //let retValue = await Helper.dummy1()\n\t\tlet retValue = await Helper.validatePartnerPercentage()\n\t\t//let retValue = await Helper.dummy2()\n\t\t//showAlert('retValue' + retValue)\n    return retValue;\n\t\t\n\t},\n\tvalidatePartnerPercentage: async () => {\n\t\ttry {\n\t\t\tlet response = await getPartnerPercentageInfo.run()\n\t\t\tconsole.log('response', response)\n\t\t\tif(!!response && response[0].authsigncount >= 1 && response[0].authsignsum >= 50) {\n\t\t\t\t//showAlert(\"True Worked\" + JSON.stringify(response));\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tshowAlert('Partner% must be greater than 50...Please update Partner%');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch(e) {\n\t\t\treturn false;\n\t\t}\n\t},\n\tdummy1: async () => {\n\t\tlet status = await getPartnerPercentageInfo.run().then((response) => {\n\t\t\t\t if(!!response && response.authsigncount >= 1 && response.authsignsum >= 50 ){\n\t\t\t\t\t\tconsole.log('Partner Percentage valid');\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t//showAlert('Partner% must be greater than 50...Please update Partner%');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t//showAlert(\"True Worked\");\n\t\t\t//return true;\n\t\t}).catch(\n\t\t() => {\n\t\t\tshowAlert(\"False\");\n\t\t\treturn false;\n\t\t}\n\t\t);\n\t\tconsole.log('Status ', status);\n\t\treturn status;\n\t}\n}",
    "variables": []
  },
  "id": "Auth Signatory Add India_Helper",
  "deleted": false,
  "gitSyncId": "61e6589e69c0e21f279fec21_620a1cae5ce68e0e609d9e21"
}