{
  "unpublishedCollection": {
    "name": "JSObjectKYCIndProp",
    "pageId": "Entity KYC Ind Proprietorship",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmyVar1: [],\n\tdocShortForms: {\n\t\t'PD1': 'Entity Proof Document 1',\n\t\t'PD2':'Entity Proof Document 2',\n\t\t'PAN': 'PAN',\n\t\t'CC': 'Cancelled Cheque',\n\t\t'IEC': 'Import Export Certificate',\n\t\t\n\t},\n\tgetOldFilePath: (docType) => {\n\t\t\tconst list = ListKYCDocQuery.data.filter((entry) => {\n\t\t\tconst dirs = entry.fileName.split(\"/\");\n\t\t\treturn dirs[2].startsWith(docType);\n\t\t\t});\n\t\t\treturn list.length > 0 ? list[0].fileName : null;\n\t},\n\t\n\tmyFungenerateOID: () => {\n\t\t//write code here\n\t\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1).concat('OID');\n\t},\n\t\n\tdeleteIfFileExist: async (docType) => {\n\t\t\tconst oldFilePath = this.getOldFilePath(docType);\n\t\t\tif(oldFilePath !== null) {\n\t\t\t\tawait DeleteFileQuery.run(undefined, undefined, {\n\t\t\t\t\t\tpath: oldFilePath\n\t\t\t\t});\n\t\t\t}\n\t},\n\t\n\tmyFunUploadKYCIndProp: async () => {\n\t\t\t\n\t\tif(selectEntityProofdoc1.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('PD1');\t\n\t\t\tawait\tQueryInsertEntityKYCIndProp.run({ \n\t\t\t\tdocType: selectEntityProofdoc1Type.selectedOptionValue,\n\t\t\t\tdocPathFilename: selectEntityProofdoc1.files[0].name\n\t\t\t});\n\t\t\tQueryEntityProofdoc1.run();\n\t\t}\n\t\t\n\t\tif(selectEntityProofdoc2.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('PD2');\t\n\t\t\tawait\tQueryInsertEntityKYCIndProp.run({\n\t\t\t\tdocType: selectEntityProofdoc2Type.selectedOptionValue,\n\t\t\t\tdocPathFilename: selectEntityProofdoc2.files[0].name\n\t\t\t});\n\t\t\tQueryEntityProofdoc2.run();\n\t\t}\n\t\t\n\t\tif(selectEntityPAN.files.length === 1) {\t  \n\t\t\tawait this.deleteIfFileExist('PAN');\t\n\t\t\tawait QueryInsertEntityKYCIndProp.run({\n\t\t\t\tdocType: 'PAN',\n\t\t\t\tdocPathFilename: selectEntityPAN.files[0].name\n\t\t\t});\n\t\t\tQueryEntityPAN.run();\n\t\t}\n\t\t\n\t\tif(selectEntityCnclChq.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('CC');\t\n\t\t\tawait QueryInsertEntityKYCIndProp.run({ \n\t\t\t\tdocType: 'CancelledCheque',\n\t\t\t\tdocPathFilename: selectEntityCnclChq.files[0].name\n\t\t\t});\n\t\t\tQueryEntityCnclChq.run();\n\t\t}\n\t\t\n\t\tif(selectEntityImpExpCert.files.length === 1) {\t\t\n\t\t\tawait this.deleteIfFileExist('IEC');\t\n\t\t\tawait QueryInsertEntityKYCIndProp.run({ \n\t\t\t\tdocType: 'ImportExportCertificate',\n\t\t\t\tdocPathFilename: selectEntityImpExpCert.files[0].name\n\t\t\t});\n\t\t\tQueryEntityImpExpCert.run();\n\t\t}\n\t\t\n\t\tshowAlert('KYC Documents Uploaded');\n\t\tnavigateTo('Individual KYC Summary', {});\n\t},\n\t\n\tgetPD1UploadPath: () => {\n\t\tlet path = `${appsmith.store.FilePath}/${appsmith.store.customerOID}_EntityIndPro/PD1__`;\n\t\tif(selectEntityProofdoc1Type.selectedOptionValue) {\n\t\t\tpath = path + selectEntityProofdoc1Type.selectedOptionValue + '__';\n\t\t}\n\t\tpath = path + selectEntityProofdoc1.files[0].name;\n\t\treturn path;\n\t},\n\t\n\tgetPD2UploadPath: () => {\n\t\tlet path = `${appsmith.store.FilePath}/${appsmith.store.customerOID}_EntityIndPro/PD2__`;\n\t\tif(selectEntityProofdoc2Type.selectedOptionValue) {\n\t\t\tpath = path + selectEntityProofdoc2Type.selectedOptionValue + '__';\n\t\t}\n\t\tpath = path + selectEntityProofdoc2.files[0].name;\n\t\treturn path;\n\t},\n\t\n\tgetTableData: () => {\n\t\treturn ListKYCDocQuery.data.map((entry) => {\n\t\t\tconst dirs = entry.fileName.split(\"/\");\n\t\t\tconst fileDetails = dirs[2].split(\"__\");\n\t\t\treturn {\n\t\t\t\tDocumentType: this.docShortForms[fileDetails[0]],\n\t\t\t\tDocumentName: fileDetails.length === 3 ? fileDetails[1] : '-',\n\t\t\t\tFileName: fileDetails[fileDetails.length - 1],\n\t\t\t\tDownload: '',\n\t\t\t\tRemove: '',\n\t\t\t\tpath: entry.fileName\n\t\t\t};\n\t\t});\n\t},\n\t\n\tdownloadFile: async (fileName, path) => {\n\t\tshowAlert(`File name for download: ${fileName} ${path}`);\n\t\tconst name = fileName;\n\t\tawait storeValue('tempfileName', fileName);\n\t\tawait downloadFileQuery.run(()=> {\n\t\t\t\tdownload(atob(downloadFileQuery.data.fileData), appsmith.store.tempfileName);\n\t\t\t}, undefined, {\n\t\t\tpath: path\n\t\t});\n\t},\n\t\n\tremoveFile: async (path) => {\n\t\tawait DeleteFileQuery.run(() => {\n\t\t\tListKYCDocQuery.run();\n\t\t}, undefined, {\n\t\t\tpath: path\n\t\t});\n\t}\n}",
    "variables": [
      {
        "name": "myVar1",
        "value": []
      },
      {
        "name": "docShortForms",
        "value": {
          "POI": "Proof of Identification",
          "POA": "Proof of Address",
          "TRC": "Tax registration Certificate",
          "CC": "Cancelled Cheque"
        }
      }
    ]
  },
  "id": "Entity KYC Ind Proprietorship_JSObjectKYCIndProp",
  "deleted": false,
  "gitSyncId": "61f91c227d9ae6350106c2a4_62064d827b36c77a8580c7d9"
}