{
  "unpublishedCollection": {
    "name": "JSObjectKYCIndLLP",
    "pageId": "Entity KYC Ind LLP",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmyVar1: [],\n\tdocShortForms: {\n\t\t'COI': 'Certificate of Incorporation',\n\t\t'PD':'Partnership Deed',\n\t\t'PAN': 'PAN',\n\t\t'POA': 'Proof of Address',\n\t\t'LPDPIN': 'List of Partners with DPIN',\n\t\t'CC':'Cancelled Cheque',\n\t\t'IEC': 'Import Export Certificate',\n\t\t'LLPBR': 'LLP Board Resolution',\n\t\t'BOD': 'Beneficial ownership decleration',\n\t\t'PL': 'Partnership Letter'\t\n\t},\n\tgetOldFilePath: (docType) => {\n\t\t\tconst list = ListKYCDocQuery.data.filter((entry) => {\n\t\t\tconst dirs = entry.fileName.split(\"/\");\n\t\t\treturn dirs[2].startsWith(docType);\n\t\t\t});\n\t\t\treturn list.length > 0 ? list[0].fileName : null;\n\t},\n\n\tmyFungenerateOID: () => {\n\t\t//write code here\n\t\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1).concat('OID');\n\t},\n\tmyFunUploadKYCIndLLP: async () => {\n\t\t\n\t\tif(selectEntityCertIncorp.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('COI');\t\n\t\t\tawait\tQueryInsertEntityKYCIndLLP.run({ \n\t\t\t\tdocType: 'CertificateOfIncorporation', \n\t\t\t\tdocPathFilename: selectEntityCertIncorp.files[0].name\n\t\t\t});\n\t\t\tQueryEntityCertIncorp.run();\n\t\t}\n\t\n\t\tif(selectEntityPartnershipDeed.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('PD');\t\n\t\t\tawait\tQueryInsertEntityKYCIndLLP.run({\n\t\t\t\tdocType: 'Partnership Deed', \n\t\t\t\tdocPathFilename: selectEntityPartnershipDeed.files[0].name\n\t\t\t});\n\t\t\tQueryEntityPartnershipDeed.run();\n\t\t}\n\t\n\t\tif(selectEntityPAN.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('PAN');\n\t\t\tawait QueryInsertEntityKYCIndLLP.run({\n\t\t\t\tdocType: 'PAN',\n\t\t\t\tdocPathFilename: selectEntityPAN.files[0].name\n\t\t\t});\n\t\t\tQueryEntityPAN.run();\n\t\t}\n\t\n\t\tif(selectEntityPOA.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('POA');\n\t\t\tawait QueryInsertEntityKYCIndLLP.run({ \n\t\t\t\tdocType: SelectEntityPOADocName.selectedOptionValue,\n\t\t\t\tdocPathFilename: selectEntityPOA.files[0].name\n\t\t\t});\n\t\t\tQuerySelectPOA.run();\n\t\t}\n\t\n\t\tif(selectEntityPartnersList.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('LPDPIN');\n\t\t\tawait QueryInsertEntityKYCIndLLP.run({ \n\t\t\t\tdocType: 'PartnersList',\n\t\t\t\tdocPathFilename: selectEntityPartnersList.files[0].name\n\t\t\t});\n\t\t\tQuerySelectEntityPartnersList.run();\n\t\t}\n\t\n\t\tif(selectEntityCancelledChq.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('CC');\n\t\t\tawait QueryInsertEntityKYCIndLLP.run({ \n\t\t\t\tdocType: 'Cancelled Cheque',\n\t\t\t\tdocPathFilename: selectEntityCancelledChq.files[0].name\n\t\t\t});\n\t\t\tQuerySelectEntityCnclChq.run();\n\t\t}\n\t\n\t\tif(selectEntityCertImpExp.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('IEC');\n\t\t\tawait QueryInsertEntityKYCIndLLP.run({ \n\t\t\t\tdocType: 'Import Export Certificate',\n\t\t\t\tdocPathFilename: selectEntityCertImpExp.files[0].name\n\t\t\t});\n\t\t\tQuerySelectEntityImpExpCert.run();\n\t\t}\n\t\n\t\tif(selectEntityLLPResolution.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('LLPBR');\n\t\t\tawait QueryInsertEntityKYCIndLLP.run({ \n\t\t\t\tdocType: 'LLP Board Resolution',\n\t\t\t\tdocPathFilename: selectEntityLLPResolution.files[0].name\n\t\t\t});\n\t\t\tQuerySelectEntityLLPResolution.run();\n\t\t}\n\t\n\t\tif(selectEntityBenOwnershipDec.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('BOD');\n\t\t\tawait QueryInsertEntityKYCIndLLP.run({ \n\t\t\t\tdocType:'Ownership Declaration',\n\t\t\t\tdocPathFilename: selectEntityBenOwnershipDec.files[0].name\n\t\t\t});\n\t\t\tQueryselectEntityBenOwnershipD.run();\n\t\t}\n\t\n\t\tif(selectEntityPartnershipLetter.files.length === 1) {\n\t\t\tawait this.deleteIfFileExist('PL');\n\t\t\tawait QueryInsertEntityKYCIndLLP.run({ \n\t\t\t\tdocType: 'Partnership Letter',\n\t\t\t\tdocPathFilename: selectEntityPartnershipLetter.files[0].name\n\t\t\t});\n\t\t\tQuerySelectEntityPtnrshpLetter.run();\n\t\t}\n\t\n\t\tshowAlert('KYC Documents Uploaded');\n\t\tnavigateTo('Individual KYC Summary', {});\n\t},\n\t\n\tgetPOAUploadPath: () => {\n\t\tlet path = `${appsmith.store.FilePath}/${appsmith.store.customerOID}_EntityIndLLP/POA__`;\n\t\tif(SelectEntityPOADocName.selectedOptionValue) {\n\t\t\tpath = path + SelectEntityPOADocName.selectedOptionValue + '__';\n\t\t}\n\t\tpath = path + selectEntityPOA.files[0].name;\n\t\treturn path;\n\t},\n\t\n\tdeleteIfFileExist: async (docType) => {\n\t\t\tconst oldFilePath = this.getOldFilePath(docType);\n\t\t\tif(oldFilePath !== null) {\n\t\t\t\tawait DeleteFileQuery.run(undefined, undefined, {\n\t\t\t\t\t\tpath: oldFilePath\n\t\t\t\t});\n\t\t\t}\n\t},\n\t\n\tgetTableData: () => {\n\t\treturn ListKYCDocQuery.data.map((entry) => {\n\t\t\tconst dirs = entry.fileName.split(\"/\");\n\t\t\tconst fileDetails = dirs[2].split(\"__\");\n\t\t\treturn {\n\t\t\t\tDocumentType: this.docShortForms[fileDetails[0]],\n\t\t\t\tDocumentName: fileDetails.length === 3 ? fileDetails[1] : '-',\n\t\t\t\tFileName: fileDetails[fileDetails.length - 1],\n\t\t\t\tDownload: '',\n\t\t\t\tRemove: '',\n\t\t\t\tpath: entry.fileName\n\t\t\t};\n\t\t});\n\t},\n\t\n\tdownloadFile: async (fileName, path) => {\n\t\tshowAlert(`File name for download: ${fileName} ${path}`);\n\t\tconst name = fileName;\n\t\tawait storeValue('tempfileName', fileName);\n\t\tawait downloadFileQuery.run(()=> {\n\t\t\t\tdownload(atob(downloadFileQuery.data.fileData), appsmith.store.tempfileName);\n\t\t\t}, undefined, {\n\t\t\tpath: path\n\t\t});\n\t},\n\tremoveFile: async (path) => {\n\t\tawait DeleteFileQuery.run(() => {\n\t\t\tListKYCDocQuery.run();\n\t\t}, undefined, {\n\t\t\tpath: path\n\t\t});\n\t}\n}\n",
    "variables": [
      {
        "name": "myVar1",
        "value": []
      },
      {
        "name": "docShortForms",
        "value": {
          "POI": "Proof of Identification",
          "POA": "Proof of Address",
          "TRC": "Tax registration Certificate",
          "CC": "Cancelled Cheque"
        }
      }
    ]
  },
  "id": "Entity KYC Ind LLP_JSObjectKYCIndLLP",
  "deleted": false,
  "gitSyncId": "620a44fa5acff70fe6310821_620b4bbbfebb1e7beb8ea0d8"
}