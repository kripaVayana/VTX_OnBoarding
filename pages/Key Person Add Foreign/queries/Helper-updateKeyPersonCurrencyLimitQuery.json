{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "updateKeyPersonCurrencyLimitQuery",
    "fullyQualifiedName": "Helper.updateKeyPersonCurrencyLimitQuery",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Key Person Add Foreign",
    "collectionId": "Key Person Add Foreign_Helper",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n        const updates = Helper.updateKeyPersonCurrencyLimitString();\n        updates.forEach((updatedItem) => {\n            console.log('updatedItem-', updatedItem);\n            //const return_currencyresponse = updateKeyPersonCurrencyLimit.run({currencyLimitOID:updatedItem.oid, currencyLimit:updatedItem.limit});\n            const return_currencyresponse = updateKeyPersonCurrencyLimit.run({ currencyLimitOID: updatedItem.oid, currencyLimit: updatedItem.limit });\n            if (!!return_currencyresponse) {\n                console.log(\"Success\", return_currencyresponse);\n            } else {\n                console.log(\"Error\", return_currencyresponse);\n            }\n        });\n    }",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n        const updates = Helper.updateKeyPersonCurrencyLimitString();\n        updates.forEach((updatedItem) => {\n            console.log('updatedItem-', updatedItem);\n            //const return_currencyresponse = updateKeyPersonCurrencyLimit.run({currencyLimitOID:updatedItem.oid, currencyLimit:updatedItem.limit});\n            const return_currencyresponse = updateKeyPersonCurrencyLimit.run({ currencyLimitOID: updatedItem.oid, currencyLimit: updatedItem.limit });\n            if (!!return_currencyresponse) {\n                console.log(\"Success\", return_currencyresponse);\n            } else {\n                console.log(\"Error\", return_currencyresponse);\n            }\n        });\n    }"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Key Person Add Foreign_Helper.updateKeyPersonCurrencyLimitQuery",
  "deleted": false,
  "gitSyncId": "621755a1972a414f3eae1d32_621ca60ad5164d218fbe2ad7"
}