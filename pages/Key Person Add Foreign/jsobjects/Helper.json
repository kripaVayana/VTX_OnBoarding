{
  "unpublishedCollection": {
    "name": "Helper",
    "pageId": "Key Person Add Foreign",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n    get_data: (personOID) => {\n        const formFields = List1.items;\n        //const personOID = 3;\n        return formFields.map((item, idx) => {\n            return `(\n\t\t\t\t\t\t  '${utils.generateOID(20)}',\n\t\t\t\t\t\t\t'${personOID}',\n\t\t\t\t\t\t\t'${personOID}',\n\t\t\t\t\t\t\t'${appsmith.store.customerOID}',\n\t\t\t\t\t\t\t'${appsmith.store.customerID}',\n\t\t\t\t\t\t\t'${'Key Person Foreign'}',\n\t\t\t\t\t\t\t'${item.Text8.text[idx]}',\n\t\t\t\t\t\t\t${item.Input19.text}\n\t\t\t\t\t\t\t)`;\n        }).join(',')\n    },\n    dummy: () => {\n        const formFields = List1.items;\n        return formFields.map((item, idx) => {\n            return `'${item.Text8.text[idx]}',\n\t\t\t${(item.Input20.text)},\n\t\t\t${(item.vayCurrencyLimitOID.text)}`;\n        });\n    },\n    updateKeyPersonCurrencyLimitold: () => {\n        const formFields = List1.items;\n        return formFields.map((item, idx) => {\n            return `UPDATE APS_CUSTOMER_KEY_PERSON_CURRENCYLIMIT SET CUSTOMER_KEY_PERSON_CURRENCY_LIMIT ='${(item.Input20.text)}' WHERE OID = '${(getKeyPersonCurrencyLimit.data[idx].OID)}'`\n            //return formFields\n        });\n    },\n    formList: () => {\n        const formFields = List1.items;\n        return formFields;\n    },\n    getKeyPersonData: () => {\n        showAlert('Key Person' + appsmith.store.keyPersonData)\n        //if(appsmith.store.keyPersonData== undefined){\n        const retain_keyPersonData = Array()\n        showAlert('retain_keyPersonData -' + retain_keyPersonData[0])\n        storeValue('keyPersonData', retain_keyPersonData)\n        //\t}else{\n\n        //}\n\n        return appsmith.store.keyPersonData;\n    },\n    getKeyPersonCurrencyLimitData: () => {\n        console.log('Key Person Limit Currencies fecthed :', getKeyPersonCurrencyLimit.data);\n        if (getKeyPersonCurrencyLimit.data.length > 0) {\n            return getKeyPersonCurrencyLimit.data;\n        } else {\n            const selectedCurrency = appsmith.store.vayCCY;\n            console.log('In Static Currencies', selectedCurrency);\n            return appsmith.store.vayCCY.map((item) => {\n                return ({\n                    CUSTOMER_KEY_PERSON_CURRENCY_CODE_FORADMTXN: item,\n                    CUSTOMER_KEY_PERSON_CURRENCY_LIMIT: 0\n                });\n            });\n        }\n    },\n    updateKeyPersonCurrencyLimitQuery: async () => {\n        const updates = this.updateKeyPersonCurrencyLimitString();\n        updates.forEach((updatedItem) => {\n            console.log('updatedItem-', updatedItem);\n            //const return_currencyresponse = updateKeyPersonCurrencyLimit.run({currencyLimitOID:updatedItem.oid, currencyLimit:updatedItem.limit});\n            const return_currencyresponse = updateKeyPersonCurrencyLimit.run({ currencyLimitOID: updatedItem.oid, currencyLimit: updatedItem.limit });\n            if (!!return_currencyresponse) {\n                console.log(\"Success\", return_currencyresponse);\n            } else {\n                console.log(\"Error\", return_currencyresponse);\n            }\n        });\n    },\n    getCurrencies: () => {\n        return appsmith.store.vayCCY;\n    },\n    updateKeyPersonCurrencyLimitString: () => {\n        const formFields = List1.items;\n        //console.log('Form List',formFields);\n        return formFields.map((item, idx) => {\n            return ({\n                limit: item.Input20.text,\n                oid: getKeyPersonCurrencyLimit.data[idx].OID\n            });\n        });\n    },\n    getStore: () => {\n        return appsmith.store;\n    },\n    changeKeyPersonAddress: async () => {\n        //const retain_keyPersonData = await Helper.retainKeyPersonInKey();\n        const retain_keyPersonData = Helper.initializeRetainKPObject();\n        await storeValue('keyPersonData', retain_keyPersonData);\n        console.log('Entity Admin Data - ', appsmith.store.keyPersonData);\n        if (vayFgnKeyPersonAddCountrySelec.selectedOptionValue != \"IN\") {\n            navigateTo('Add New Address Indian', { \"bkPage\": \"FgnKpAdd\" });\n        }\n    },\n    initializeRetainKPObject: () => {\n        const retain_keyPersonData = {}\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ENTITY_TYPE = 'Key Person Foreign'\n\t\t\t\tretain_keyPersonData.CUSTOMER_KEY_PERSON_TYPE = vayKeyPersonFgnType.selectedOptionValue\n\t\t\t\t//showAlert('Key Person Tyep'+ retain_keyPersonData.CUSTOMER_KEY_PERSON_TYPE)\n\t\t\t  retain_keyPersonData.CUSTOMER_KEY_PERSON_IS_AUTH_SIGN = Checkbox1.isChecked\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_OTHERS_INFO = Input2.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_PARTNER_PERC = Input18.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_FIRSTNAME = Input1.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_MIDDLENAME = Input3.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_LASTNAME = Input4.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_MOTHERNAME = Input5.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_FATHERNAME = Input6.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_DOB = moment(DatePicker1).format(\"YYYY-MM-DD\")\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_TAX_ID = Input7.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_NATIONALITY = Select3.selectedOptionValue\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_RES_TAX_PURPOSE = Select4.selectedOptionValue\n        //retain_keyPersonData.CUSTOMER_KEY_PERSON_DESIGNATION  = ''\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_PASSPORT_NO = Input21.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_PASSPORT_EXPIRE_DATE = moment(DatePicker1).format(\"YYYY-MM-DD\")\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ACCESS_AS = vayKeyPersonFgnUserAccess.selectedOptionValue\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_DIN_DPIN = Input8.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_LINE1 = Input9.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_LINE2 = Input10.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_CITY = Input11.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_DISTRICT = Input12.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_STATE = Input.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_COUNTRY = vayFgnKeyPersonAddCountrySelec.selectedOptionValue\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_ADDRESS_ZIP = Input15.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_MOBILE = Input16.text\n        retain_keyPersonData.CUSTOMER_KEY_PERSON_EMAIL = Input17.text\n        appsmith.store.vayCCY.map((item) => {\n            return ({\n                CUSTOMER_KEY_PERSON_CURRENCY_CODE_FORADMTXN: item,\n                CUSTOMER_KEY_PERSON_CURRENCY_LIMIT: Input19.text\n            });\n        });\n        return retain_keyPersonData\n    },\n    clearappsmithStore: () => {\n        for (let key in appsmith.store) {\n            if (appsmith.store.hasOwnProperty(key)) {\n                const value = appsmith.store[key];\n                if (key == \"keyPersonData\") {\n                    storeValue(key, '')\n                }\n                console.log(key, value);\n            }\n        }\n    }\n\n}\n",
    "variables": []
  },
  "id": "Key Person Add Foreign_Helper",
  "deleted": false,
  "gitSyncId": "621755a1972a414f3eae1d32_621ca60ad5164d218fbe2af1"
}