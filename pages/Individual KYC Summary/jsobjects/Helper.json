{
  "unpublishedCollection": {
    "name": "Helper",
    "pageId": "Individual KYC Summary",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\n\tnavigateToKYC: async (entityType) => {\n\t\t  const kycparsedString = entityType.split(\"|\")??[]\n\t\t\t//showAlert(kycparsedString[0] + kycparsedString[1]);\n\t\t\tstoreValue(\"kycPersonEntityType\",kycparsedString[1]);\n\t\t\tstoreValue(\"kycPersonOID\",kycparsedString[0]);\n\t\t  Helper.createeSignAssineeList();\n\t\t  //showAlert(\"appsmith.store.kycPersonEntityType\"+appsmith.store.vayApplicantJurisdiction);\n\t\t \tif(appsmith.store.vayApplicantJurisdiction===\"IN\") {\n\t\t\t\t  \n\t\t\t\t\t/* if((appsmith.store.kycPersonEntityType === \"Entity Administrator Person\" || appsmith.store.kycPersonEntityType === \"Auth Signatory Person India\") &&\n\t\t\t\t\tappsmith.store.vayApplicationIndConstitutionType == \"LLP\"){\n\t\t\t\t\t\tnavigateTo(\"Entity KYC Ind LLP\",{})\n\t\t\t\t\t}else if((appsmith.store.kycPersonEntityType === \"Entity Administrator Person\" || appsmith.store.kycPersonEntityType === \"Auth Signatory Person India\") && \n\t\t\t\t\tappsmith.store.vayApplicationIndConstitutionType  == \"PLC\"){\n\t\t\t\t\t\tnavigateTo(\"Entity KYC Ind Company\",{})\n\t\t\t\t\t}else if((appsmith.store.kycPersonEntityType === \"Entity Administrator Person\" || appsmith.store.kycPersonEntityType === \"Auth Signatory Person India\") && \n\t\t\t\t\tappsmith.store.vayApplicationIndConstitutionType  == \"LLC\"){ */\n\t\t\t\t\t\tnavigateTo(\"Individual KYC India Add\",{})\n\t\t\t\t\t/* }else if((appsmith.store.kycPersonEntityType === \"Entity Administrator Person\" || appsmith.store.kycPersonEntityType === \"Auth Signatory Person India\") && \n\t\t\t\t\tappsmith.store.vayApplicationIndConstitutionType  == \"proprietorship\"){\n\t\t\t\t\t\tnavigateTo(\"Entity KYC Ind Proprietorship\",{})\n\t\t\t\t\t}else if((appsmith.store.kycPersonEntityType === \"Entity Administrator Person\" || appsmith.store.kycPersonEntityType === \"Auth Signatory Person India\") && \n\t\t\t\t\tappsmith.store.vayApplicationIndConstitutionType  == \"partnership\"){\n\t\t\t\t\t\t navigateTo(\"Entity KYC Ind Partnership\",{})\n \t \t\t\t\t} */\n\t\t\t} else {\n\t\t\t\t\t/* showAlert(\"1\")\n\t\t\t\t\tif(appsmith.store.kycPersonEntityType == \"Entity Administrator Person\"){\n\t\t\t\t\t\t navigateTo(\"Entity KYC Foreign\",{})\n\t\t\t\t\t}else if(appsmith.store.kycPersonEntityType == \"Auth Signatory Person Foreign\"){ */\n\t\t\t\t\t\t navigateTo(\"Individual KYC Foreign Add\",{})\n\t\t\t\t\t// }\n\t\t\t}\n\t},\n\tcreateeSignAssineeList: async ()=>{\n\t\t try {\n\t\t\t \t\tconst aSigneeOptions = []\n\t\t\t\t\tlet finalOptions\n\t\t\t\t\tlet signeeString\n\t\t\t\t\tlet response = await getKeyPersonForeSign.run();\n\t\t\t   \tconsole.log('response', response)\n\t\t\t   \tif(!!response && response[0].authsigncount >= 1) {\n\t\t\t\t\t\t  const iOptIndex = response[0].authsigncount\n\t\t\t\t\t\t\tconsole.log('iOptIndex::',iOptIndex);\n    \t\t\t\t\tfor (let iOption=1;iOption<=iOptIndex;iOption++){\n\t\t\t\t\t\t\t\tconst signeeString = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: iOption + \" Signee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: iOption + \" Signee\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconsole.log('signeeString - ',signeeString);\n\t\t\t\t\t\t\t\taSigneeOptions.push(signeeString);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tstoreValue('aSigneeOptions',aSigneeOptions);\n\t\t\t\t\t\tconsole.log('aSigneeOptions - ',aSigneeOptions);\n\t\t\t\t\t\tconsole.log('from Store  - ',appsmith.store.aSigneeOptions);\n\t\t\t\t\t\t return appsmith.store.aSigneeOptions;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\n\t\t\t\t\t}\t\n\t\t\t  return finalOptions;\n\t\t} catch(e) {\n\t\t\treturn false;\n\t\t}\n\t},\n\tdummy:()=>{\n\t\treturn appsmith.store.aSigneeOptions\n\t}\n}",
    "variables": []
  },
  "id": "Individual KYC Summary_Helper",
  "deleted": false,
  "gitSyncId": "621755a1972a414f3eae1d32_62209ab4def0e86809366997"
}